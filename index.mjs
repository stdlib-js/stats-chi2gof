// Copyright (c) 2024 The Stdlib Authors. License is Apache-2.0: http://www.apache.org/licenses/LICENSE-2.0
/// <reference types="./index.d.ts" />
import{isPrimitive as t}from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-nonnegative-integer@v0.2.1-esm/index.mjs";import s from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-collection@v0.2.1-esm/index.mjs";import e from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-ndarray-like@v0.2.1-esm/index.mjs";import{isPrimitive as i}from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-number@v0.2.0-esm/index.mjs";import{isPrimitive as r}from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-string@v0.2.1-esm/index.mjs";import n from"https://cdn.jsdelivr.net/gh/stdlib-js/math-base-utils-absolute-difference@v0.3.1-esm/index.mjs";import o from"https://cdn.jsdelivr.net/gh/stdlib-js/constants-float64-sqrt-eps@v0.2.1-esm/index.mjs";import d from"https://cdn.jsdelivr.net/gh/stdlib-js/constants-float64-pinf@v0.2.1-esm/index.mjs";import a from"https://cdn.jsdelivr.net/gh/stdlib-js/stats-base-dists-chisquare-cdf@v0.2.1-esm/index.mjs";import m from"https://cdn.jsdelivr.net/gh/stdlib-js/error-tools-fmtprodmsg@v0.2.1-esm/index.mjs";import l from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-nan@v0.2.1-esm/index.mjs";import p from"https://cdn.jsdelivr.net/gh/stdlib-js/blas-base-daxpy@v0.2.1-esm/index.mjs";import h from"https://cdn.jsdelivr.net/gh/stdlib-js/blas-base-dscal@v0.2.1-esm/index.mjs";import f from"https://cdn.jsdelivr.net/gh/stdlib-js/blas-ext-base-dsumpw@v0.2.1-esm/index.mjs";import j from"https://cdn.jsdelivr.net/gh/stdlib-js/array-float64@v0.2.1-esm/index.mjs";import c,{isPrimitive as v}from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-positive-integer@v0.2.1-esm/index.mjs";import{isPrimitive as u}from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-boolean@v0.2.1-esm/index.mjs";import b from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-plain-object@v0.2.1-esm/index.mjs";import g from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-has-own-property@v0.2.1-esm/index.mjs";import w from"https://cdn.jsdelivr.net/gh/stdlib-js/stats-base-dists-bernoulli-pmf@v0.2.1-esm/index.mjs";import x from"https://cdn.jsdelivr.net/gh/stdlib-js/stats-base-dists-binomial-pmf@v0.2.1-esm/index.mjs";import y from"https://cdn.jsdelivr.net/gh/stdlib-js/stats-base-dists-discrete-uniform-pmf@v0.2.0-esm/index.mjs";import E from"https://cdn.jsdelivr.net/gh/stdlib-js/stats-base-dists-geometric-pmf@v0.2.1-esm/index.mjs";import z from"https://cdn.jsdelivr.net/gh/stdlib-js/stats-base-dists-hypergeometric-pmf@v0.2.1-esm/index.mjs";import G from"https://cdn.jsdelivr.net/gh/stdlib-js/stats-base-dists-negative-binomial-pmf@v0.1.1-esm/index.mjs";import _ from"https://cdn.jsdelivr.net/gh/stdlib-js/stats-base-dists-poisson-pmf@v0.2.1-esm/index.mjs";import T from"https://cdn.jsdelivr.net/gh/stdlib-js/array-base-incrspace@v0.2.1-esm/index.mjs";import V from"https://cdn.jsdelivr.net/gh/stdlib-js/random-sample@v0.2.1-esm/index.mjs";import P from"https://cdn.jsdelivr.net/gh/stdlib-js/blas-ext-base-dfill@v0.2.1-esm/index.mjs";import q from"https://cdn.jsdelivr.net/gh/stdlib-js/math-base-special-roundn@v0.2.1-esm/index.mjs";import N from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-define-nonenumerable-read-only-property@v0.2.1-esm/index.mjs";import R from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-define-nonenumerable-read-only-accessor@v0.2.2-esm/index.mjs";var D={alpha:.05,ddof:0,simulate:!1,iterations:500};var O={bernoulli:w,binomial:x,"discrete-uniform":y,geometric:E,hypergeometric:z,"negative-binomial":G,poisson:_};function S(t,s,e,i,r){var n,o,a,m,l;for(n=0,l=0;l<t;l++){if(o=s[l*e],0===(a=i[l*r])){if(0===o)continue;return d}n+=(m=o-a)*m/a}return n}function k(t,s,e,i,r){var n;for(n=0;n<t;n++)i[s[n*e]*r]+=1;return i}function C(t,s,e,i){return this instanceof C?(this._pValue=t,this._alpha=s,this._statistic=e,this._df=i,this):new C(t,s,e,i)}function F(c,w){var x,y,E,z,G,_,q,N,R,F,J,K,L,M,Q,A,B,H,I,U;if(e(c)&&1===c.ndims&&1===c.strides.length)L=c.data,M=c.strides[0],Q=c.offset;else{if(!s(c))throw new TypeError(m("1Gz3T",c));L=c,M=1,Q=0}for(K=c.length,q=new j(K+1),A=0,I=0;I<K;I++){if(H=L[Q+M*I],!t(H))throw new TypeError(m("1Gz9L",I,H));q[I]=H,A+=H}if(0===A)throw new Error(m("1Gz1D"));if(y=0,r(w)){if((R=g(O,U=w)?O[U]:new Error(m("1Gz9K",U)))instanceof Error)throw R;for(y+=R.length-1,E=[0],I=0;I<y;I++){if(!i(H=arguments[I+2])||l(H))throw new TypeError(m("1Gz9M",I+2,H));E.push(H)}for(x=new j(K+1),F=0,I=0;I<K;I++)E[0]=I,"discrete-uniform"===w&&(E[0]+=E[1]),F+=H=R.apply(null,E),x[I]=H*A;F<1&&(x[K]=(1-F)*A,K+=1)}else{if(e(w)&&1===w.ndims&&1===w.strides.length)L=w.data,M=w.strides[0],Q=w.offset;else{if(!s(w))throw new TypeError(m("1Gz9N",w));L=w,M=1,Q=0}if(w.length!==K)throw new RangeError(m("1Gz1E"));for(x=new j(K),F=0,I=0;I<K;I++){if(H=L[Q+M*I],!i(H))throw new TypeError(m("1Gz9O",I,H));if(H<0)throw new TypeError(m("1Gz9P",I,H));F+=H>1?d:H,x[I]=H}n(F,1)<=o&&(B=w,x=h(K,A,x,1))}if(z={alpha:D.alpha,ddof:D.ddof,simulate:D.simulate,iterations:D.iterations},arguments.length>2+y&&(N=function(s,e){if(!b(e))return new TypeError(m("1Gz2V",e));if(g(e,"alpha")){if(s.alpha=e.alpha,!i(s.alpha)||l(s.alpha))return new TypeError(m("1Gz8P","alpha",s.alpha));if(s.alpha<0||s.alpha>1)return new RangeError(m("1Gz9Q","alpha",s.alpha))}return g(e,"ddof")&&(s.ddof=e.ddof,!t(s.ddof))?new TypeError(m("1Gz2t","ddof",s.ddof)):g(e,"iterations")&&(s.iterations=e.iterations,!v(s.iterations))?new TypeError(m("1Gz3P","iterations",s.iterations)):g(e,"simulate")&&(s.simulate=e.simulate,!u(s.simulate))?new TypeError(m("1Gz2o","simulate",s.simulate)):null}(z,arguments[2+y]),N))throw N;return _=S(K,q,1,x,1),z.simulate?(void 0===B&&(H=f(K,x,1),B=p(K,1/H,x,1,new j(K),1)),G=function(t,s,e,i,r,n){var o,d,a,m,l;for(o=T(0,t,1),d={size:r,probs:e},a=new j(t),m=1,l=0;l<n;l++)S(t,a=k(t,V(o,d),1,a,1),1,s,1)>=i&&(m+=1),l<n-1&&P(t,0,a,1);return m/(n+1)}(K,x,B,_,A,z.iterations)):G=1-a(_,J=K-1-z.ddof),new C(G,z.alpha,_,void 0===J?null:J)}R(C.prototype,"alpha",(function(){return this._alpha})),R(C.prototype,"df",(function(){return this._df})),N(C.prototype,"method","Chi-square goodness-of-fit test"),R(C.prototype,"pValue",(function(){return this._pValue})),R(C.prototype,"rejected",(function(){return this._pValue<=this._alpha})),R(C.prototype,"statistic",(function(){return this._statistic})),N(C.prototype,"toString",(function(t){var s,e,i;if(e=4,s=!0,arguments.length>0){if(!b(t))throw new TypeError(m("1Gz47",t));if(g(t,"digits")){if(!c(t.digits))throw new TypeError(m("1Gz3P","digits",t.digits));e=t.digits}if(g(t,"decision")){if(!u(t.decision))throw new TypeError(m("1Gz2o","decision",t.decision));s=t.decision}}return i=[this.method,"","","Null hypothesis: population probabilities are equal to those in p","","","    pValue: "+q(this._pValue,-e),"    statistic: "+q(this._statistic,-e),"    degrees of freedom: "+this._df,""],s&&(i.push("Test Decision: "+(this.rejected?"Reject":"Fail to reject")+" null in favor of alternative at "+100*this._alpha+"% significance level"),i.push("")),i.join("\n")})),N(C.prototype,"toJSON",(function(){return{rejected:this.rejected,alpha:this._alpha,pValue:this._pValue,df:this._df,statistic:this._statistic,method:this.method}}));export{F as default};
//# sourceMappingURL=index.mjs.map
