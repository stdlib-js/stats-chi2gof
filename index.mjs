// Copyright (c) 2022 The Stdlib Authors. License is Apache-2.0: http://www.apache.org/licenses/LICENSE-2.0
/// <reference types="./index.d.ts" />
import t from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-nonnegative-integer@esm/index.mjs";import e from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-collection@esm/index.mjs";import i from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-ndarray-like@esm/index.mjs";import s from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-number@esm/index.mjs";import n from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-string@esm/index.mjs";import r from"https://cdn.jsdelivr.net/gh/stdlib-js/math-base-utils-absolute-difference@esm/index.mjs";import o from"https://cdn.jsdelivr.net/gh/stdlib-js/constants-float64-sqrt-eps@esm/index.mjs";import a from"https://cdn.jsdelivr.net/gh/stdlib-js/constants-float64-pinf@esm/index.mjs";import d from"https://cdn.jsdelivr.net/gh/stdlib-js/stats-base-dists-chisquare-cdf@esm/index.mjs";import m from"https://cdn.jsdelivr.net/gh/stdlib-js/string-format@esm/index.mjs";import l from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-nan@esm/index.mjs";import p from"https://cdn.jsdelivr.net/gh/stdlib-js/blas-base-daxpy@esm/index.mjs";import h from"https://cdn.jsdelivr.net/gh/stdlib-js/blas-base-dscal@esm/index.mjs";import u from"https://cdn.jsdelivr.net/gh/stdlib-js/blas-ext-base-dsumpw@esm/index.mjs";import f from"https://cdn.jsdelivr.net/gh/stdlib-js/array-float64@esm/index.mjs";import c from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-positive-integer@esm/index.mjs";import j from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-boolean@esm/index.mjs";import b from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-plain-object@esm/index.mjs";import g from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-has-own-property@esm/index.mjs";import v from"https://cdn.jsdelivr.net/gh/stdlib-js/stats-base-dists-bernoulli-pmf@esm/index.mjs";import y from"https://cdn.jsdelivr.net/gh/stdlib-js/stats-base-dists-binomial-pmf@esm/index.mjs";import w from"https://cdn.jsdelivr.net/gh/stdlib-js/stats-base-dists-discrete-uniform-pmf@esm/index.mjs";import x from"https://cdn.jsdelivr.net/gh/stdlib-js/stats-base-dists-geometric-pmf@esm/index.mjs";import E from"https://cdn.jsdelivr.net/gh/stdlib-js/stats-base-dists-hypergeometric-pmf@esm/index.mjs";import V from"https://cdn.jsdelivr.net/gh/stdlib-js/stats-base-dists-negative-binomial-pmf@esm/index.mjs";import _ from"https://cdn.jsdelivr.net/gh/stdlib-js/stats-base-dists-poisson-pmf@esm/index.mjs";import T from"https://cdn.jsdelivr.net/gh/stdlib-js/array-base-incrspace@esm/index.mjs";import P from"https://cdn.jsdelivr.net/gh/stdlib-js/random-sample@esm/index.mjs";import O from"https://cdn.jsdelivr.net/gh/stdlib-js/blas-ext-base-dfill@esm/index.mjs";import F from"https://cdn.jsdelivr.net/gh/stdlib-js/math-base-special-roundn@esm/index.mjs";import q from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-define-nonenumerable-read-only-property@esm/index.mjs";import S from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-define-nonenumerable-read-only-accessor@esm/index.mjs";var k={alpha:.05,ddof:0,simulate:!1,iterations:500};var z=function(){return{alpha:k.alpha,ddof:k.ddof,simulate:k.simulate,iterations:k.iterations}},I=t.isPrimitive,M=c.isPrimitive,N=j.isPrimitive,R=s.isPrimitive,A=b,C=l,D=g,J=m;var U=function(t,e){if(!A(e))return new TypeError(J("invalid argument. Options argument must be an object. Value: `%s`.",e));if(D(e,"alpha")){if(t.alpha=e.alpha,!R(t.alpha)||C(t.alpha))return new TypeError(J("invalid option. `%s` option must be a number. Option: `%s`.","alpha",t.alpha));if(t.alpha<0||t.alpha>1)return new RangeError(J("invalid option. `%s` option must be a number on the interval `[0,1]`. Value: `%s`.","alpha",t.alpha))}return D(e,"ddof")&&(t.ddof=e.ddof,!I(t.ddof))?new TypeError(J("invalid option. `%s` option must be a nonnegative integer. Option: `%s`.","ddof",t.ddof)):D(e,"iterations")&&(t.iterations=e.iterations,!M(t.iterations))?new TypeError(J("invalid option. `%s` option must be a positive integer. Option: `%s`.","iterations",t.iterations)):D(e,"simulate")&&(t.simulate=e.simulate,!N(t.simulate))?new TypeError(J("invalid option. `%s` option must be a boolean. Option: `%s`.","simulate",t.simulate)):null},B=g,G=m,H={bernoulli:v,binomial:y,"discrete-uniform":w,geometric:x,hypergeometric:E,"negative-binomial":V,poisson:_};var K=function(t){return B(H,t)?H[t]:new Error(G("invalid argument. Unsupported/unrecognized distribution name. Value: `%s`.",t))},L=a;var Q=function(t,e,i,s,n){var r,o,a,d,m;for(r=0,m=0;m<t;m++){if(o=e[m*i],0===(a=s[m*n])){if(0===o)continue;return L}r+=(d=o-a)*d/a}return r};var W=T,X=P,Y=f,Z=O,$=function(t,e,i,s,n){var r;for(r=0;r<t;r++)s[e[r*i]*n]+=1;return s},tt=Q;var et=function(t,e,i,s,n,r){var o,a,d,m,l,p;for(o=W(0,t,1),a={size:n,probs:i},d=new Y(t),m=1,p=0;p<r;p++)l=X(o,a),d=$(t,l,1,d,1),tt(t,d,1,e,1)>=s&&(m+=1),p<r-1&&Z(t,0,d,1);return m/(r+1)},it=c,st=b,nt=j.isPrimitive,rt=g,ot=F,at=q,dt=S,mt=m;function lt(t,e,i,s){return this instanceof lt?(this._pValue=t,this._alpha=e,this._statistic=i,this._df=s,this):new lt(t,e,i,s)}dt(lt.prototype,"alpha",(function(){return this._alpha})),dt(lt.prototype,"df",(function(){return this._df})),at(lt.prototype,"method","Chi-square goodness-of-fit test"),dt(lt.prototype,"pValue",(function(){return this._pValue})),dt(lt.prototype,"rejected",(function(){return this._pValue<=this._alpha})),dt(lt.prototype,"statistic",(function(){return this._statistic})),at(lt.prototype,"toString",(function(t){var e,i,s;if(i=4,e=!0,arguments.length>0){if(!st(t))throw new TypeError(mt("invalid argument. Must provide an object. Value: `%s`.",t));if(rt(t,"digits")){if(!it(t.digits))throw new TypeError(mt("invalid option. `%s` option must be a positive integer. Option: `%s`.","digits",t.digits));i=t.digits}if(rt(t,"decision")){if(!nt(t.decision))throw new TypeError(mt("invalid option. `%s` option must be a boolean. Option: `%s`.","decision",t.decision));e=t.decision}}return s=[this.method,"","","Null hypothesis: population probabilities are equal to those in p","","","    pValue: "+ot(this._pValue,-i),"    statistic: "+ot(this._statistic,-i),"    degrees of freedom: "+this._df,""],e&&(s.push("Test Decision: "+(this.rejected?"Reject":"Fail to reject")+" null in favor of alternative at "+100*this._alpha+"% significance level"),s.push("")),s.join("\n")})),at(lt.prototype,"toJSON",(function(){return{rejected:this.rejected,alpha:this._alpha,pValue:this._pValue,df:this._df,statistic:this._statistic,method:this.method}}));var pt=lt,ht=t.isPrimitive,ut=e,ft=i,ct=s.isPrimitive,jt=n.isPrimitive,bt=r,gt=o,vt=a,yt=d,wt=m,xt=l,Et=p,Vt=h,_t=u,Tt=f,Pt=z,Ot=U,Ft=K,qt=Q,St=et,kt=pt;var zt=function(t,e){var i,s,n,r,o,a,d,m,l,p,h,u,f,c,j,b,g,v,y;if(ft(t)&&1===t.ndims&&1===t.strides.length)f=t.data,c=t.strides[0],j=t.offset;else{if(!ut(t))throw new TypeError(wt("invalid argument. First argument must be either an array-like object or a 1-dimensional ndarray. Value: `%s`.",t));f=t,c=1,j=0}for(u=t.length,d=new Tt(u+1),b=0,y=0;y<u;y++){if(v=f[j+c*y],!ht(v))throw new TypeError(wt("invalid argument. First argument must contain nonnegative integers. Index: `%u`. Value: `%u`.",y,v));d[y]=v,b+=v}if(0===b)throw new Error("invalid argument. First argument must contain at least one element greater than zero (i.e., the total number number of observations must be greater than zero).");if(s=0,jt(e)){if((l=Ft(e))instanceof Error)throw l;for(s+=l.length-1,n=[0],y=0;y<s;y++){if(!ct(v=arguments[y+2])||xt(v))throw new TypeError(wt("invalid argument. Probability mass function (PMF) arguments must be numbers. Argument: `%f`. Value: `%f`.",y+2,v));n.push(v)}for(i=new Tt(u+1),p=0,y=0;y<u;y++)n[0]=y,"discrete-uniform"===e&&(n[0]+=n[1]),p+=v=l.apply(null,n),i[y]=v*b;p<1&&(i[u]=(1-p)*b,u+=1)}else{if(ft(e)&&1===e.ndims&&1===e.strides.length)f=e.data,c=e.strides[0],j=e.offset;else{if(!ut(e))throw new TypeError(wt("invalid argument. Second argument must be either an array-like object (or 1-dimensional ndarray) of probabilities summing to one, an array-like object (or 1-dimensional ndarray) of expected frequencies, or a discrete probability distribution name. Value: `%s`.",e));f=e,c=1,j=0}if(e.length!==u)throw new Error("invalid arguments. First and second arguments must have the same length.");for(i=new Tt(u),p=0,y=0;y<u;y++){if(v=f[j+c*y],!ct(v))throw new TypeError(wt("invalid argument. Second argument must only contain numbers. Index: `%u`. Value: `%f`.",y,v));if(v<0)throw new TypeError(wt("invalid argument. Second argument must only contain nonnegative numbers. Index: `%u`. Value: `%d`.",y,v));p+=v>1?vt:v,i[y]=v}bt(p,1)<=gt&&(g=e,i=Vt(u,b,i,1))}if(r=Pt(),arguments.length>2+s&&(m=Ot(r,arguments[2+s])))throw m;return a=qt(u,d,1,i,1),r.simulate?(void 0===g&&(v=_t(u,i,1),g=Et(u,1/v,i,1,new Tt(u),1)),o=St(u,i,g,a,b,r.iterations)):(h=u-1-r.ddof,o=1-yt(a,h)),new kt(o,r.alpha,a,void 0===h?null:h)},It=zt;export{It as default};
//# sourceMappingURL=index.mjs.map
