// Copyright (c) 2022 The Stdlib Authors. License is Apache-2.0: http://www.apache.org/licenses/LICENSE-2.0
/// <reference types="./index.d.ts" />
import{isPrimitive as t}from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-nonnegative-integer@esm/index.mjs";import e from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-collection@esm/index.mjs";import s from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-ndarray-like@esm/index.mjs";import{isPrimitive as i}from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-number@esm/index.mjs";import{isPrimitive as r}from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-string@esm/index.mjs";import n from"https://cdn.jsdelivr.net/gh/stdlib-js/math-base-utils-absolute-difference@esm/index.mjs";import o from"https://cdn.jsdelivr.net/gh/stdlib-js/constants-float64-sqrt-eps@esm/index.mjs";import d from"https://cdn.jsdelivr.net/gh/stdlib-js/constants-float64-pinf@v0.0.7-esm/index.mjs";import a from"https://cdn.jsdelivr.net/gh/stdlib-js/stats-base-dists-chisquare-cdf@esm/index.mjs";import m from"https://cdn.jsdelivr.net/gh/stdlib-js/error-tools-fmtprodmsg@v0.0.2-esm/index.mjs";import l from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-nan@esm/index.mjs";import p from"https://cdn.jsdelivr.net/gh/stdlib-js/blas-base-daxpy@v0.0.9-esm/index.mjs";import h from"https://cdn.jsdelivr.net/gh/stdlib-js/blas-base-dscal@v0.0.9-esm/index.mjs";import f from"https://cdn.jsdelivr.net/gh/stdlib-js/blas-ext-base-dsumpw@v0.0.11-esm/index.mjs";import u from"https://cdn.jsdelivr.net/gh/stdlib-js/array-float64@esm/index.mjs";import j,{isPrimitive as c}from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-positive-integer@esm/index.mjs";import{isPrimitive as b}from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-boolean@esm/index.mjs";import g from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-plain-object@esm/index.mjs";import v from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-has-own-property@esm/index.mjs";import y from"https://cdn.jsdelivr.net/gh/stdlib-js/stats-base-dists-bernoulli-pmf@esm/index.mjs";import w from"https://cdn.jsdelivr.net/gh/stdlib-js/stats-base-dists-binomial-pmf@esm/index.mjs";import x from"https://cdn.jsdelivr.net/gh/stdlib-js/stats-base-dists-discrete-uniform-pmf@esm/index.mjs";import E from"https://cdn.jsdelivr.net/gh/stdlib-js/stats-base-dists-geometric-pmf@esm/index.mjs";import _ from"https://cdn.jsdelivr.net/gh/stdlib-js/stats-base-dists-hypergeometric-pmf@esm/index.mjs";import T from"https://cdn.jsdelivr.net/gh/stdlib-js/stats-base-dists-negative-binomial-pmf@esm/index.mjs";import V from"https://cdn.jsdelivr.net/gh/stdlib-js/stats-base-dists-poisson-pmf@esm/index.mjs";import O from"https://cdn.jsdelivr.net/gh/stdlib-js/array-base-incrspace@esm/index.mjs";import P from"https://cdn.jsdelivr.net/gh/stdlib-js/random-sample@esm/index.mjs";import q from"https://cdn.jsdelivr.net/gh/stdlib-js/blas-ext-base-dfill@v0.0.10-esm/index.mjs";import k from"https://cdn.jsdelivr.net/gh/stdlib-js/math-base-special-roundn@esm/index.mjs";import F from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-define-nonenumerable-read-only-property@esm/index.mjs";import S from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-define-nonenumerable-read-only-accessor@esm/index.mjs";var R=.05,A=0,I=!1,N=500;function z(){return{alpha:R,ddof:A,simulate:I,iterations:N}}function C(e,s){if(!g(s))return new TypeError(m("0dO2h",s));if(v(s,"alpha")){if(e.alpha=s.alpha,!i(e.alpha)||l(e.alpha))return new TypeError(m("0dO8h","alpha",e.alpha));if(e.alpha<0||e.alpha>1)return new RangeError(m("invalid option. `%s` option must be a number on the interval: [0, 1]. Value: `%s`.","alpha",e.alpha))}return v(s,"ddof")&&(e.ddof=s.ddof,!t(e.ddof))?new TypeError(m("0dO35","ddof",e.ddof)):v(s,"iterations")&&(e.iterations=s.iterations,!c(e.iterations))?new TypeError(m("0dO3b","iterations",e.iterations)):v(s,"simulate")&&(e.simulate=s.simulate,!b(e.simulate))?new TypeError(m("0dO30","simulate",e.simulate)):null}var D={bernoulli:y,binomial:w,"discrete-uniform":x,geometric:E,hypergeometric:_,"negative-binomial":T,poisson:V};function G(t){return v(D,t)?D[t]:new Error(m("0dO9v",t))}function H(t,e,s,i,r){var n,o,a,m,l;for(n=0,l=0;l<t;l++){if(o=e[l*s],0===(a=i[l*r])){if(0===o)continue;return d}n+=(m=o-a)*m/a}return n}function J(t,e,s,i,r){var n;for(n=0;n<t;n++)i[e[n*s]*r]+=1;return i}function K(t,e,s,i,r,n){var o,d,a,m,l;for(o=O(0,t,1),d={size:r,probs:s},a=new u(t),m=1,l=0;l<n;l++)H(t,a=J(t,P(o,d),1,a,1),1,e,1)>=i&&(m+=1),l<n-1&&q(t,0,a,1);return m/(n+1)}function M(t,e,s,i){return this instanceof M?(this._pValue=t,this._alpha=e,this._statistic=s,this._df=i,this):new M(t,e,s,i)}function B(j,c){var b,g,v,y,w,x,E,_,T,V,O,P,q,k,F,S,R,A,I;if(s(j)&&1===j.ndims&&1===j.strides.length)q=j.data,k=j.strides[0],F=j.offset;else{if(!e(j))throw new TypeError(m("invalid argument. First argument must be either an array-like object or a one-dimensional ndarray. Value: `%s`.",j));q=j,k=1,F=0}for(P=j.length,E=new u(P+1),S=0,I=0;I<P;I++){if(A=q[F+k*I],!t(A))throw new TypeError(m("invalid argument. First argument must contain nonnegative integers. Index: `%u`. Value: `%s`.",I,A));E[I]=A,S+=A}if(0===S)throw new Error(m("0dO1G"));if(g=0,r(c)){if((T=G(c))instanceof Error)throw T;for(g+=T.length-1,v=[0],I=0;I<g;I++){if(!i(A=arguments[I+2])||l(A))throw new TypeError(m("invalid argument. Probability mass function (PMF) arguments must be numbers. Argument: `%u`. Value: `%s`.",I+2,A));v.push(A)}for(b=new u(P+1),V=0,I=0;I<P;I++)v[0]=I,"discrete-uniform"===c&&(v[0]+=v[1]),V+=A=T.apply(null,v),b[I]=A*S;V<1&&(b[P]=(1-V)*S,P+=1)}else{if(s(c)&&1===c.ndims&&1===c.strides.length)q=c.data,k=c.strides[0],F=c.offset;else{if(!e(c))throw new TypeError(m("invalid argument. Second argument must be either an array-like object (or one-dimensional ndarray) of probabilities summing to one, an array-like object (or one-dimensional ndarray) of expected frequencies, or a discrete probability distribution name. Value: `%s`.",c));q=c,k=1,F=0}if(c.length!==P)throw new RangeError(m("0dO1H"));for(b=new u(P),V=0,I=0;I<P;I++){if(A=q[F+k*I],!i(A))throw new TypeError(m("invalid argument. Second argument must only contain numbers. Index: `%u`. Value: `%s`.",I,A));if(A<0)throw new TypeError(m("0dOA0",I,A));V+=A>1?d:A,b[I]=A}n(V,1)<=o&&(R=c,b=h(P,S,b,1))}if(y=z(),arguments.length>2+g&&(_=C(y,arguments[2+g])))throw _;return x=H(P,E,1,b,1),y.simulate?(void 0===R&&(A=f(P,b,1),R=p(P,1/A,b,1,new u(P),1)),w=K(P,b,R,x,S,y.iterations)):(O=P-1-y.ddof,w=1-a(x,O)),new M(w,y.alpha,x,void 0===O?null:O)}S(M.prototype,"alpha",(function(){return this._alpha})),S(M.prototype,"df",(function(){return this._df})),F(M.prototype,"method","Chi-square goodness-of-fit test"),S(M.prototype,"pValue",(function(){return this._pValue})),S(M.prototype,"rejected",(function(){return this._pValue<=this._alpha})),S(M.prototype,"statistic",(function(){return this._statistic})),F(M.prototype,"toString",(function(t){var e,s,i;if(s=4,e=!0,arguments.length>0){if(!g(t))throw new TypeError(m("0dO4K",t));if(v(t,"digits")){if(!j(t.digits))throw new TypeError(m("0dO3b","digits",t.digits));s=t.digits}if(v(t,"decision")){if(!b(t.decision))throw new TypeError(m("0dO30","decision",t.decision));e=t.decision}}return i=[this.method,"","","Null hypothesis: population probabilities are equal to those in p","","","    pValue: "+k(this._pValue,-s),"    statistic: "+k(this._statistic,-s),"    degrees of freedom: "+this._df,""],e&&(i.push("Test Decision: "+(this.rejected?"Reject":"Fail to reject")+" null in favor of alternative at "+100*this._alpha+"% significance level"),i.push("")),i.join("\n")})),F(M.prototype,"toJSON",(function(){return{rejected:this.rejected,alpha:this._alpha,pValue:this._pValue,df:this._df,statistic:this._statistic,method:this.method}}));export{B as default};
//# sourceMappingURL=index.mjs.map
